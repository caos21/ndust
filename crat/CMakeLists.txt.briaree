
cmake_minimum_required(VERSION 2.8)

project(crat)

#set(CMAKE_CXX_COMPILER /home/apps/Logiciels/gcc/5.4.0/bin/g++)

add_definitions(-DBOOST_LOG_DYN_LINK)
add_definitions(-DNDEBUG)

set (CMAKE_CXX_FLAGS "-std=gnu++14 ${CMAKE_CXX_FLAGS}")

#find_package(Boost COMPONENTS log thread system atomic chrono date_time REQUIRED)

# defines variable SRCS to include cpp files
file(GLOB SRCS *.cpp)
file(GLOB INCSRCS RELATIVE "../include/" "*.cpp")

set(BOOST "/home/apps/Logiciels/boost/1.63/")
set(GSL "/home/apps/Logiciels/GSL/")
set(HDF5 "/home/apps/Logiciels/hdf5/1.8.19-gcc")

# project includes
include_directories("../include/")
# include local boost-numeric-bindings
include_directories("~/local/include/boost-numeric-bindings/")
# include  boost
include_directories("${BOOST}/include/")
# include lapack blas cblas
include_directories("/RQusagers/bsantos/local/include")
# include GSL
include_directories("${GSL}/include/")
# include HDF5
include_directories("${HDF5}/include/")

# boost
link_directories("${BOOST}/lib/")
# lapack blas cblas
link_directories("/home/bsantos/local/lib/")
# gsl
link_directories("${GSL}/lib/")
# HDF5
link_directories("${HDF5}/lib/")


add_library(GridModel STATIC ../include/GridModel.cpp)
add_library(CRate STATIC ../include/CRate.cpp)

# include_directories(${INC_DIR})

set(CMAKE_CXX_COMPILE_FLAGS "${CMAKE_CXX_COMPILE_FLAGS} -Ofast -frecord-gcc-switches -ftree-vectorizer-verbose=3 -fopenmp")

set(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} -Ofast -frecord-gcc-switches -fopenmp")

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -std=gnu++14 -Ofast -frecord-gcc-switches")
#
# RELEASE ADD -DNDEBUG for boost performance
#
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DNDEBUG -fopenmp")
#set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fopenmp")

list(APPEND ${CMAKE_CXX_COMPILE_FLAGS} ${LIBS})

# WARNING not working
#find_package(OpenMP)
#if(OPENMP_FOUND)
#  message("** OpenMP found")
#  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
#  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS} ")
#  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS} ")
#  add_definitions(-DOPENMP)
#endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Ofast -frecord-gcc-switches")

add_executable(crat ${SRCS} ${INCSRCS})

target_link_libraries(GridModel
                      boost_log
		      hdf5
		      hdf5_cpp
		      boost_system
		      boost_thread
		      boost_atomic
		      boost_chrono
		      boost_regex
		      boost_date_time
		      boost_filesystem
		      blas
		      lapack)


target_link_libraries(CRate
                      GridModel
                      boost_log
		      hdf5
		      hdf5_cpp
		      boost_system
		      boost_thread
		      boost_atomic
		      boost_chrono
		      boost_regex
		      boost_date_time
		      boost_filesystem
		      blas
		      lapack)

target_link_libraries(crat                      
                      CRate
                      boost_log
		      hdf5
		      hdf5_cpp
		      boost_system
		      boost_thread
		      boost_atomic
		      boost_chrono
		      boost_regex
		      boost_date_time
		      boost_filesystem
		      blas
		      lapack)


enable_testing()

install(TARGETS crat RUNTIME DESTINATION bin)

