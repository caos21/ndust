
cmake_minimum_required(VERSION 2.8)

project(crat)

add_definitions(-DBOOST_LOG_DYN_LINK)
add_definitions(-DNDEBUG)

set (CMAKE_CXX_FLAGS "-std=gnu++14 ${CMAKE_CXX_FLAGS}")

find_package(Boost COMPONENTS thread system atomic chrono date_time REQUIRED)

# defines variable SRCS to include cpp files
file(GLOB SRCS *.cpp)
file(GLOB INCSRCS RELATIVE "../include/" "*.cpp")

# project includes
include_directories("../include/")
# include local boost-numeric-bindings
include_directories("~/lib/include/boost-numeric-bindings/")
# include  boost
#include_directories("~/lib/boost/include/")
# include lapack blas cblas
#include_directories("/home/bsantos/local/include")
# include GSL
include_directories("/cvmfs/soft.computecanada.ca/easybuild/software/2017/sse3/Compiler/intel2016.4/gsl/2.3/include/")
# include HDF5
include_directories("/cvmfs/soft.computecanada.ca/easybuild/software/2017/sse3/Compiler/intel2016.4/hdf5/1.8.18/include/")

# local boost
#link_directories("~/lib/boost/lib/")
# lapack blas cblas
#link_directories("/home/bsantos/local/lib/")
# gsl
link_directories("/cvmfs/soft.computecanada.ca/easybuild/software/2017/sse3/Compiler/intel2016.4/gsl/2.3/lib/")
# HDF5
link_directories("/cvmfs/soft.computecanada.ca/easybuild/software/2017/sse3/Compiler/intel2016.4/hdf5/1.8.18/lib/")


add_library(GridModel STATIC ../include/GridModel.cpp)
add_library(CRate STATIC ../include/CRate.cpp)


# include_directories(${INC_DIR})

set(CMAKE_CXX_COMPILE_FLAGS "${CMAKE_CXX_COMPILE_FLAGS} -Ofast -frecord-gcc-switches")

set(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} -Ofast -frecord-gcc-switches")

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -std=gnu++14 -mtune=athlon-fx -O2 -frecord-gcc-switches")
#
# RELEASE ADD -DNDEBUG for boost performance
#
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DNDEBUG -fopenmp")
#set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fopenmp")

list(APPEND ${CMAKE_CXX_COMPILE_FLAGS} ${LIBS})

# WARNING not working
find_package(OpenMP)
if(OPENMP_FOUND)
  message("** OpenMP found")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS} ")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS} ")
  add_definitions(-DOPENMP)
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Ofast -frecord-gcc-switches")

add_executable(crat ${SRCS} ${INCSRCS})

target_link_libraries(CRate
                      GridModel
                      boost_log
		      hdf5
		      hdf5_cpp
		      boost_system
		      boost_thread
		      boost_atomic
		      boost_chrono
		      boost_regex
		      boost_date_time
		      boost_filesystem
		      mkl)

target_link_libraries(crat                      
                      CRate
                      boost_log
		      hdf5
		      hdf5_cpp
		      boost_system
		      boost_thread
		      boost_atomic
		      boost_chrono
		      boost_regex
		      boost_date_time
		      boost_filesystem
		      mkl)


enable_testing()

install(TARGETS crat RUNTIME DESTINATION bin)

