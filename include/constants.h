/*
 * Copyright 2016 Benjamin Santos <caos21@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

#ifndef CONSTANTS_H
#define CONSTANTS_H

#include <cmath>


// math constants, pi
#include <boost/math/constants/constants.hpp>

#include <gsl/gsl_const_mksa.h>
#include <gsl/gsl_const_num.h>

//Relative error for element in profile
// #define PROF_REL_ERR 0.05//0.0005 optimal
#define EPSILONZETA 1.0e-250
#define EPSILON 1.0e-150
// #define EPSILONETA 1.0e-50
#define EPSILONETA 1.0e-80//1.0e-18
// #define EPSILONDEATH 1.0e-50
#define EPSILONDEATH 1.0e-60//1.0e-18//1.0e-30
//
#define ZETA1_12 0.0833333333333
#define ZETA1_720 0.00138888888889

// factorials up to 170!
const double Facts[]= {
1.000000000000000000e+00,
1.000000000000000000e+00,
2.000000000000000000e+00,
6.000000000000000000e+00,
2.400000000000000000e+01,
1.200000000000000000e+02,
7.200000000000000000e+02,
5.040000000000000000e+03,
4.032000000000000000e+04,
3.628800000000000000e+05,
3.628800000000000000e+06,
3.991680000000000000e+07,
4.790016000000000000e+08,
6.227020800000000000e+09,
8.717829120000000000e+10,
1.307674368000000000e+12,
2.092278988800000000e+13,
3.556874280960000000e+14,
6.402373705728000000e+15,
1.216451004088320000e+17,
2.432902008176640000e+18,
5.109094217170944000e+19,
1.124000727777607680e+21,
2.585201673888497821e+22,
6.204484017332394100e+23,
1.551121004333098391e+25,
4.032914611266057190e+26,
1.088886945041835194e+28,
3.048883446117138016e+29,
8.841761993739700773e+30,
2.652528598121911042e+32,
8.222838654177923583e+33,
2.631308369336935547e+35,
8.683317618811887119e+36,
2.952327990396041951e+38,
1.033314796638614664e+40,
3.719933267899011775e+41,
1.376375309122634558e+43,
5.230226174666011171e+44,
2.039788208119744159e+46,
8.159152832478980083e+47,
3.345252661316381834e+49,
1.405006117752880287e+51,
6.041526306337383407e+52,
2.658271574788448529e+54,
1.196222208654801886e+56,
5.502622159812089850e+57,
2.586232415111681777e+59,
1.241391559253607253e+61,
6.082818640342675225e+62,
3.041409320171338142e+64,
1.551118753287382377e+66,
8.065817517094387685e+67,
4.274883284060025485e+69,
2.308436973392413792e+71,
1.269640335365827802e+73,
7.109985878048635815e+74,
4.052691950487721410e+76,
2.350561331282878495e+78,
1.386831185456898386e+80,
8.320987112741389895e+81,
5.075802138772248358e+83,
3.146997326038793939e+85,
1.982608315404440306e+87,
1.268869321858841513e+89,
8.247650592082471517e+90,
5.443449390774430694e+92,
3.647111091818868322e+94,
2.480035542436831022e+96,
1.711224524281412974e+98,
1.197857166996989027e+100,
8.504785885678624248e+101,
6.123445837688610055e+103,
4.470115461512684895e+105,
3.307885441519386893e+107,
2.480914081139539975e+109,
1.885494701666050381e+111,
1.451830920282858721e+113,
1.132428117820629898e+115,
8.946182130782977113e+116,
7.156945704626380571e+118,
5.797126020747367841e+120,
4.753643337012842020e+122,
3.945523969720658788e+124,
3.314240134565353194e+126,
2.817104114380551285e+128,
2.422709538367273905e+130,
2.107757298379527854e+132,
1.854826422573984361e+134,
1.650795516090846024e+136,
1.485715964481761515e+138,
1.352001527678403127e+140,
1.243841405464130547e+142,
1.156772507081641566e+144,
1.087366156656743297e+146,
1.032997848823906214e+148,
9.916779348709498296e+149,
9.619275968248212038e+151,
9.426890448883246495e+153,
9.332621544394417231e+155,
9.332621544394415097e+157,
9.425947759838358321e+159,
9.614466715035127079e+161,
9.902900716486180472e+163,
1.029901674514562810e+166,
1.081396758240290977e+168,
1.146280563734708502e+170,
1.226520203196137833e+172,
1.324641819451829238e+174,
1.443859583202493944e+176,
1.588245541522742849e+178,
1.762952551090245278e+180,
1.974506857221074306e+182,
2.231192748659813766e+184,
2.543559733472188138e+186,
2.925093693493016615e+188,
3.393108684451898878e+190,
3.969937160808721062e+192,
4.684525849754289627e+194,
5.574585761207605823e+196,
6.689502913449128183e+198,
8.094298525273445452e+200,
9.875044200833602798e+202,
1.214630436702532930e+205,
1.506141741511140931e+207,
1.882677176888926113e+209,
2.372173242880046851e+211,
3.012660018457660029e+213,
3.856204823625804837e+215,
4.974504222477287459e+217,
6.466855489220474147e+219,
8.471580690878822237e+221,
1.118248651196004535e+224,
1.487270706090685976e+226,
1.992942746161519129e+228,
2.690472707318050407e+230,
3.659042881952549416e+232,
5.012888748274991255e+234,
6.917786472619487677e+236,
9.615723196941091667e+238,
1.346201247571752574e+241,
1.898143759076171269e+243,
2.695364137888162853e+245,
3.854370717180073079e+247,
5.550293832739306028e+249,
8.047926057471992724e+251,
1.174997204390910970e+254,
1.727245890454638923e+256,
2.556323917872866673e+258,
3.808922637630570336e+260,
5.713383956445855383e+262,
8.627209774233241775e+264,
1.311335885683452678e+267,
2.006343905095682295e+269,
3.089769613847351527e+271,
4.789142901463394078e+273,
7.471062926282895454e+275,
1.172956879426414632e+278,
1.853271869493734586e+280,
2.946702272495038403e+282,
4.714723635992061610e+284,
7.590705053947218993e+286,
1.229694218739449201e+289,
2.004401576545302350e+291,
3.287218585534296618e+293,
5.423910666131589583e+295,
9.003691705778439869e+297,
1.503616514864999146e+300,
2.526075744973198422e+302,
4.269068009004706083e+304,
7.257415615308000282e+306
};

// max exact factorial
const double NFMAX = 169;

// Potential relative error comparison
const double PotRE = 0.02;

// pi from boost
const double pi = 3.141592653589793;//numpy boost::math::double_constants::pi;

// TODO use boost

const double Kboltz = GSL_CONST_MKSA_BOLTZMANN;//  kg m^2 / K s^2 
// const double Pressure = 13.332237;
// const double Temperature = 300.0;
const double EpsilonZero = 8.854187817620389e-12;//scipy //GSL_CONST_MKSA_VACUUM_PERMITTIVITY;
const double Kcoul = 1.0/(4.0*pi*EpsilonZero);
const double eCharge = 1.6021766208e-19;//GSL_CONST_MKSA_ELECTRON_CHARGE;
const double Kboltz_eV = Kboltz / eCharge; // eV / K
const double eMass = GSL_CONST_MKSA_MASS_ELECTRON;
// const double NAvogadro = GSL_CONST_NUM_AVOGADRO; // 1/mol
// const double ArMMass = 39.948; // Argon Molecular Mass (NIST) in g/mol
// const double ArMass = (ArMMass/NAvogadro)/1000.0; // Argon Mass in Kg
// const double Acc = 0.9; // Accommodation factor alpha_m
// const double SiDensity = 2329.0; //Kg/m3 https://en.wikipedia.org/wiki/Silicon
// const double EpsilonSi = 11.68; // 11.7 in
// const double AffinitySi = 4.05;//eV
// http://www.pveducation.org/pvcdrom/materials/general-properties-of-silicon

// const double critical_diameter = 1.8E-9; // Multiple charges in particle

// const double maximum_charge = 1.0E4; // Maximum charge 
#endif
